// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // Cambia esto si usas otro proveedor
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Enums
enum MessageStatus {
  READ
  UNREAD
  DELIVERED
}

enum MessageType {
  TEXT
  REACTION
  VIDEO
  IMAGE
  AUDIO
  LOCATION
  CONTACTS
  INTERACTIVE
  TEMPLATE
}

enum MessageDirection {
  INCOMING
  OUTGOING
}

enum WhatsappStatus {
  INITIAL
  ON_MAIN_MENU
  SELECTING_STATE
  ATTENDED
  BLOCKED
}

enum NotificationType {
  SUCCESS
  ERROR
  INFO
  WARNING
}

// Models
model Customer {
  id             Int              @id @default(autoincrement())
  name           String?
  phone          String?          @unique
  email          String?          @unique
  identification String?          @unique
  attending      Int
  lastActive     DateTime
  wppStatus      WhatsappStatus
  detail         String           @default("")
  messages       WhatsappMessage[]
}

model WhatsappMessage {
  id         String           @id
  message    String
  to         String
  status     MessageStatus
  direction  MessageDirection
  type       MessageType
  mediaId    String           @default("")
  timestamp  DateTime         @default(now())
  customerId Int
  customer   Customer         @relation(fields: [customerId], references: [id])
  attendant  Int
}

model Notification {
  id         Int              @id @default(autoincrement())
  userId     Int
  title      String
  body       String
  type       NotificationType
  timestamp  DateTime         @default(now())
}
model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  phone     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}